<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iidooo.gauge.mapper.GaugeItemMapper">
	<resultMap id="BaseResultMap" type="com.iidooo.gauge.model.po.GaugeItem">
		<id column="ItemID" property="itemID" jdbcType="INTEGER" />
		<result column="ProductID" property="productID" jdbcType="INTEGER" />
		<result column="Temperature" property="temperature" jdbcType="REAL" />
		<result column="Pressure" property="pressure" jdbcType="REAL" />
		<result column="Particulate" property="particulate" jdbcType="REAL" />
		<result column="Remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="UpdateUserID" property="updateUserID" jdbcType="INTEGER" />
		<result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="CreateUserID" property="createUserID" jdbcType="INTEGER" />
		<result column="IsDelete" property="isDelete" jdbcType="INTEGER" />
		<result column="Version" property="version" jdbcType="INTEGER" />

		<association select="selectProduct" column="productID" property="product" javaType="com.iidooo.gauge.model.po.GaugeProduct"></association>
	</resultMap>
	<sql id="Base_Column_List">
		I.ItemID, I.ProductID, I.Temperature, I.Pressure, I.Particulate, I.Remarks, I.UpdateTime, I.UpdateUserID,
		I.CreateTime, I.CreateUserID, I.IsDelete, I.Version
	</sql>

	<!-- 查询Item所关联的Product对象 -->
	<resultMap id="ProductResultMap" type="com.iidooo.gauge.model.po.GaugeProduct">
		<id column="ProductID" property="productID" jdbcType="INTEGER" />
		<result column="ProductCode" property="productCode" jdbcType="VARCHAR" />
		<result column="VehicleLicense" property="vehicleLicense" jdbcType="VARCHAR" />
		<result column="Remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="UpdateUserID" property="updateUserID" jdbcType="INTEGER" />
		<result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="CreateUserID" property="createUserID" jdbcType="INTEGER" />
		<result column="IsDelete" property="isDelete" jdbcType="INTEGER" />
		<result column="Version" property="version" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Product_Column_List">
		P.ProductID, P.ProductCode, P.VehicleLicense, P.Remarks, P.UpdateTime, P.UpdateUserID, P.CreateTime,
		P.CreateUserID, P.IsDelete, P.Version
	</sql>
	<select id="selectProduct" resultMap="ProductResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Product_Column_List" />
		from gauge_product P
		where P.IsDelete = 0 and P.ProductID = #{productID,jdbcType=INTEGER}
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from gauge_item
		where ItemID = #{itemID,jdbcType=INTEGER}
	</select>

	<!-- 查询获得监控项目一览 -->
	<select id="selectList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from gauge_item I
		where I.IsDelete = 0
		order by ${sortField} ${sortType}
		limit ${start}, ${pageSize}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from gauge_item
		where ItemID = #{itemID,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.iidooo.gauge.model.po.GaugeItem">
		insert into gauge_item (ItemID, ProductID, Temperature,
		Pressure, Particulate, Remarks,
		UpdateTime, UpdateUserID, CreateTime,
		CreateUserID, IsDelete, Version
		)
		values (#{itemID,jdbcType=INTEGER}, #{productID,jdbcType=INTEGER}, #{temperature,jdbcType=REAL},
		#{pressure,jdbcType=REAL}, #{particulate,jdbcType=REAL}, #{remarks,jdbcType=VARCHAR},
		#{updateTime,jdbcType=TIMESTAMP}, #{updateUserID,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
		#{createUserID,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.iidooo.gauge.model.po.GaugeItem">
		insert into gauge_item
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="itemID != null">
				ItemID,
			</if>
			<if test="productID != null">
				ProductID,
			</if>
			<if test="temperature != null">
				Temperature,
			</if>
			<if test="pressure != null">
				Pressure,
			</if>
			<if test="particulate != null">
				Particulate,
			</if>
			<if test="remarks != null">
				Remarks,
			</if>
			<if test="updateTime != null">
				UpdateTime,
			</if>
			<if test="updateUserID != null">
				UpdateUserID,
			</if>
			<if test="createTime != null">
				CreateTime,
			</if>
			<if test="createUserID != null">
				CreateUserID,
			</if>
			<if test="isDelete != null">
				IsDelete,
			</if>
			<if test="version != null">
				Version,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="itemID != null">
				#{itemID,jdbcType=INTEGER},
			</if>
			<if test="productID != null">
				#{productID,jdbcType=INTEGER},
			</if>
			<if test="temperature != null">
				#{temperature,jdbcType=REAL},
			</if>
			<if test="pressure != null">
				#{pressure,jdbcType=REAL},
			</if>
			<if test="particulate != null">
				#{particulate,jdbcType=REAL},
			</if>
			<if test="remarks != null">
				#{remarks,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUserID != null">
				#{updateUserID,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserID != null">
				#{createUserID,jdbcType=INTEGER},
			</if>
			<if test="isDelete != null">
				#{isDelete,jdbcType=INTEGER},
			</if>
			<if test="version != null">
				#{version,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.iidooo.gauge.model.po.GaugeItem">
		update gauge_item
		<set>
			<if test="productID != null">
				ProductID = #{productID,jdbcType=INTEGER},
			</if>
			<if test="temperature != null">
				Temperature = #{temperature,jdbcType=REAL},
			</if>
			<if test="pressure != null">
				Pressure = #{pressure,jdbcType=REAL},
			</if>
			<if test="particulate != null">
				Particulate = #{particulate,jdbcType=REAL},
			</if>
			<if test="remarks != null">
				Remarks = #{remarks,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUserID != null">
				UpdateUserID = #{updateUserID,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				CreateTime = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserID != null">
				CreateUserID = #{createUserID,jdbcType=INTEGER},
			</if>
			<if test="isDelete != null">
				IsDelete = #{isDelete,jdbcType=INTEGER},
			</if>
			<if test="version != null">
				Version = #{version,jdbcType=INTEGER},
			</if>
		</set>
		where ItemID = #{itemID,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.iidooo.gauge.model.po.GaugeItem">
		update gauge_item
		set ProductID = #{productID,jdbcType=INTEGER},
		Temperature = #{temperature,jdbcType=REAL},
		Pressure = #{pressure,jdbcType=REAL},
		Particulate = #{particulate,jdbcType=REAL},
		Remarks = #{remarks,jdbcType=VARCHAR},
		UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
		UpdateUserID = #{updateUserID,jdbcType=INTEGER},
		CreateTime = #{createTime,jdbcType=TIMESTAMP},
		CreateUserID = #{createUserID,jdbcType=INTEGER},
		IsDelete = #{isDelete,jdbcType=INTEGER},
		Version = #{version,jdbcType=INTEGER}
		where ItemID = #{itemID,jdbcType=INTEGER}
	</update>
</mapper>